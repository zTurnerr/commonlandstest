const TYPES = {
    loginInAnotherDevice: 'loginInAnotherDevice',
    flaggedPlot: 'flaggedPlot',
    createdLoanContract: 'createdLoanContract',
    inviteCoSigner: 'coSignerInvitation',
    borrowerSign: 'borrowerSign',
    coSignerSign: 'coSignerSign',
    sentUnderwriter: 'sentUnderwriter',
    unflaggedPlot: 'unflaggedPlot',
    acceptOrDeclineRequestToUnlock: 'acceptOrDeclineRequestToUnlock',
    requestToUnlock: 'requestToUnlock',
    requestCmlUnlock: 'requestCmlToUnlock',
    inviteClaimant: 'inviteClaimant',
    inviteSubPlotClaimant: 'inviteSubPlotClaimant',
    contractUnlocked: 'contractUnlocked',
    activateContract: 'activateContract',
    signerAccept: 'signerAccept',
    signerInvitation: 'signerInvitation',
    signerDecline: 'signerDecline',
    requestToBeClaimantAccepted: 'requestToBeClaimantAccepted',
    requestToBeClaimant: 'requestToBeClaimant',
    ownershipRequest: 'ownershipRequest',
    inviteNeighbour: 'inviteNeighbour',
    closestPlot: 'closestPlot',
    acceptInviteNeighbour: 'acceptInviteNeighbour',
    acceptInviteClaimant: 'acceptInviteClaimant',
    dispute: 'dispute',
    ownershipRequestVotingApproved: 'ownershipRequestVotingApproved',
    ownershipRequestVotingRejected: 'ownershipRequestVotingRejected',
    ownershipRequestAccepted: 'ownershipRequestAccepted',
    ownershipRequestRejected: 'ownershipRequestRejected',
    ownershipRequestVoting: 'ownershipRequestVoting',
    withdrawOwnershipVotingRejected: 'withdrawOwnershipVotingRejected',
    withdrawOwnershipVoting: 'withdrawOwnershipVoting',
    autoMarkContract: 'autoMarkContract',
    removeClaimantRequestRejected: 'removeClaimantRequestRejected',
    removeClaimantVoting: 'removeClaimantVoting',
    removeClaimantVotingApproved: 'removeClaimantVotingApproved',
    removeClaimantSelfVoting: 'removeClaimantSelfVoting',
    removeClaimantRequestAccepted: 'removeClaimantRequestAccepted',
    removeClaimantRequestVoting: 'removeClaimantRequestVoting',
    removeClaimantRejected: 'removeClaimantRejected',
    contractRightsRequest: 'contractRightsRequest',
    editPlotUpdated: 'editPlotUpdated',
    editPlotRequest: 'editPlotRequest',
    plotAssigned: 'plotAssigned',
    contractRating: 'contractRating',
    issueCertificate: 'issueCertificate',
    attestPlot: 'attestPlot',
    createAuthenticator: 'createAuthenticator',
    removeAuthenticator: 'removeAuthenticator',
};

export default TYPES;
